version: '3'

tasks:
  default:
    cmds:
      - task --list
    silent: true

  setup:py:
    desc: "Sets up the host-specific Python virtual environment and installs dependencies."
    cmds:
      - |
        HOST=$(hostname)
        case "$HOST" in
            "mie")
                VENV_DIR="mie_venv"
                ;;
            "nara")
                VENV_DIR="nara_venv"
                ;;
            *)
                VENV_DIR="venv"
                echo "Warning: Unknown host '$HOST', using generic venv directory"
                ;;
        esac
        
        if [ ! -d "$VENV_DIR" ]; then
          echo "Host-specific Python virtual environment ($VENV_DIR) not found. Creating..."
          python3 -m venv "$VENV_DIR"
          echo "Virtual environment created."
        else
          echo "Host-specific Python virtual environment ($VENV_DIR) found."
        fi
        echo "Installing/updating Python dependencies from requirements.txt..."
        "$VENV_DIR/bin/pip" install -r requirements.txt
        echo "Python setup complete."
    sources:
      - requirements.txt
    generates:
      # This is a simplification; actual generated files are inside host-specific venv
      - mie_venv/bin/pip
      - nara_venv/bin/pip

  setup:js:
    desc: "Sets up the Node.js environment and installs dependencies."
    cmds:
      - |
        if [ ! -d "node_modules" ]; then
          echo "Node.js dependencies (node_modules) not found. Installing..."
          npm install
          echo "Node.js dependencies installed."
        else
          echo "Node.js dependencies (node_modules) found. Running npm ci for consistency."
          npm ci
          echo "Node.js dependencies ensured."
        fi
    sources:
      - package-lock.json
      - package.json
    generates:
      - node_modules/.bin # A common marker for installed JS packages

  setup:e2e:
    desc: "Installs Playwright browser drivers."
    deps: [setup:js] # Ensures Playwright itself is installed via npm first
    cmds:
      - echo "Installing Playwright browser drivers (OS dependencies must be managed manually if needed)..."
      - npx playwright install
      - echo "Playwright browser drivers installation process finished."
    # To make this task run only if browsers are missing is tricky, 
    # as playwright install doesn't have a simple check. 
    # We'll rely on it being idempotent or manually run as needed for now.

  lint:py:
    desc: "Lints Python code using Ruff."
    deps: [setup:py]
    cmds:
      - |
        HOST=$(hostname)
        case "$HOST" in
            "mie") VENV_DIR="mie_venv" ;;
            "nara") VENV_DIR="nara_venv" ;;
            *) VENV_DIR="venv" ;;
        esac
        echo "Linting Python code with Ruff..."
        "$VENV_DIR/bin/ruff" check .
    sources:
      - "src/**/*.py"
      - "tests/**/*.py"

  lint:py:types:
    desc: "Type checks Python code using MyPy."
    deps: [setup:py]
    cmds:
      - |
        HOST=$(hostname)
        case "$HOST" in
            "mie") VENV_DIR="mie_venv" ;;
            "nara") VENV_DIR="nara_venv" ;;
            *) VENV_DIR="venv" ;;
        esac
        echo "Type checking Python code with MyPy..."
        "$VENV_DIR/bin/mypy" src/ tests/
    sources:
      - "src/**/*.py"
      - "tests/**/*.py"
      # Potentially add mypy.ini if it exists

  lint:js:
    desc: "Lints JavaScript/TypeScript code using ESLint."
    deps: [setup:js]
    cmds:
      - echo "Linting JavaScript/TypeScript code with ESLint..."
      - npx eslint src/static/js/ tests/e2e/
    sources:
      - "src/static/js/**/*.js"
      - "src/static/js/**/*.ts"
      - "tests/e2e/**/*.js"
      - "tests/e2e/**/*.ts"
      # Potentially add .eslintrc.js or similar config files

  lint:all:
    desc: "Runs all linters (Python, MyPy, ESLint)."
    deps: [lint:py, lint:py:types, lint:js]
    cmds:
      - echo "All linting tasks completed."

  test:py:unit:
    desc: "Runs Python unit tests using Pytest."
    deps: [setup:py]
    cmds:
      - |
        HOST=$(hostname)
        case "$HOST" in
            "mie") VENV_DIR="mie_venv" ;;
            "nara") VENV_DIR="nara_venv" ;;
            *) VENV_DIR="venv" ;;
        esac
        echo "Running Python unit tests..."
        "$VENV_DIR/bin/pytest" tests/unit/
    sources:
      - "src/**/*.py"
      - "tests/unit/**/*.py"

  test:py:api:
    desc: "Runs Python API/integration tests using Pytest."
    deps: [setup:py]
    cmds:
      - |
        HOST=$(hostname)
        case "$HOST" in
            "mie") VENV_DIR="mie_venv" ;;
            "nara") VENV_DIR="nara_venv" ;;
            *) VENV_DIR="venv" ;;
        esac
        echo "Running Python API/integration tests..."
        "$VENV_DIR/bin/pytest" tests/integration/
    sources:
      - "src/**/*.py"
      - "tests/integration/**/*.py"

  test:py:cov:
    desc: "Runs Python tests with coverage."
    cmds:
      - |
        HOST=$(hostname)
        case "$HOST" in
            "mie") VENV_DIR="mie_venv" ;;
            "nara") VENV_DIR="nara_venv" ;;
            *) VENV_DIR="venv" ;;
        esac
        echo "Running Python tests with coverage..."
        PYTHONPATH=. "$VENV_DIR/bin/pytest" --cov=src --cov-report=html --cov-report=term tests/unit/ tests/integration/
    sources:
      - "src/**/*.py"
      - "tests/unit/**/*.py"
      - "tests/integration/**/*.py"
      - "pytest.ini"
      - "pyproject.toml"
      - "requirements.txt"
      - "Taskfile.yml"

  test:py:all:
    desc: "Runs all Python tests, including coverage."
    deps: [test:py:cov]
    cmds:
      - echo "All Python tests (including coverage) completed."

  test:e2e:
    desc: "Runs Playwright E2E tests."
    deps: [setup:e2e] # Ensures Playwright browsers are installed
    cmds:
      - echo "Running Playwright E2E tests..."
      - npx playwright test --config=tests/playwright.config.cjs
    sources:
      - "tests/e2e/**/*.js"
      - "tests/e2e/**/*.ts"
      - "tests/playwright.config.cjs"
      # Add dependencies on src files if E2E tests are tightly coupled, 
      # or rely on a running server setup externally for now.

  ci:local:
    desc: "Runs the full local CI suite: linting, Python tests (with coverage), and E2E tests."
    deps:
      - lint:all
      - test:py:all # This already includes coverage
      - test:e2e
    cmds:
      - echo "Local CI suite completed successfully!"

# More tasks will be added here as per the implementation plan. 